@component-name = "portal-lol"
definition {

	property database.types = "mysql";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Masterclass";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Masterclass Site") {
			Masterclass.addMasterclassSite(siteName = "Test Masterclass Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Masterclass Name");
		}
	}

	@description = "This is a test for LPS-137508. Create a Site with the Masterclass Site initializer"
	@priority = "5"
	test AddMasterclassSite {
		task ("Go to Masterclass site") {
			var portalURL = PropsUtil.get("portal.url");

			Navigator.openSpecificURL(url = "${portalURL}/web/test-masterclass-name");
		}

		task ("Assert the Masterclass Welcome Page is present") {
			AssertElementPresent(
				key_title = "Welcome to Masterclass",
				locator1 = "Masterclass#FRAGMENT_HERO_PRE");
		}
	}

	@description = "This is a test for LPS-141573. Apply the Masterclass Modern Style Book to home pages"
	@priority = "4"
	test ApplyMasterclassModernStyleBook {
		task ("Go to Masterclass Stylebook and set Masterclass Moderns as Default") {
			StyleBooksAdmin.openStyleBooksAdmin(siteURLKey = "test-masterclass-name");

			StyleBooksAdmin.markStyleBookAsDefault(
				confirmMessage = "Do you want to replace Masterclass Modern for Masterclass Classic as the default style book?",
				styleBookName = "Masterclass Modern");
		}

		task ("Assert the default Masterclass Moderns is applied to Home page") {
			var portalURL = PropsUtil.get("portal.url");

			Navigator.openSpecificURL(url = "${portalURL}/web/test-masterclass-name");

			AssertCssValue(
				key_content = "Read More",
				key_element = "a",
				key_id = "hero-button",
				key_type = "link",
				locator1 = "StyleBookEditor#CONTRIBUTED_FRAGMENT_INLINE_CONTENT",
				locator2 = "color",
				value1 = "rgba(255, 255, 255, 1)");
		}
	}

	@description = "This is a test for LPS-136183. Can use a Masterclass Border and Classroom Header fragments"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassBorderandHeader {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass button and link fragments"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassButtonandLink {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass  container and image fragments"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassContainerandImage {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass Cookie Banner fragment"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassCookieBanner {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass Footer fragment"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassFooter {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass Heading fragment"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassHeading {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass Hero fragment"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassHero {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass Map Video fragment"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassMapVideo {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass Navbar fragment"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassNavbar {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass Private Header fragment"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassPrivateHeader {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass Sign In fragment"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassSignIn {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass Subscribe Form fragment"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassSubscribeForm {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass Tabs fragment"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassTabs {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass Text Block fragment"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassTextBlock {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass Video fragment"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassVideo {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-136183. Can use a Masterclass Video Player fragment"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUseMasterclassVideoPlayer {

		// TODO Create the automation about the LPS-136183.

	}

	@description = "This is a test for LPS-141370. Can change the Number of Blogs in the List at Display Page Template of Blogs"
	@priority = "4"
	test ChangetheNumberofBlogsinBlogsListatDPT {
		task ("Go to Masterclass Site") {
			ApplicationsMenu.gotoSite(site = "Test Masterclass Name");
		}

		task ("Go to Display Page Templates") {
			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Page Templates");

			NavItem.gotoPageTemplates();

			Navigator.gotoNavTab(navTab = "Display Page Templates");
		}

		task ("Go to Blog Entry and Edit the Layout and Maximum Number of Itens") {
			Click(
				key_assetType = "Blog Entry",
				locator1 = "Sharing#SHARED_CONTENT_ASSET_TYPE");

			PageEditor.editCDLayoutAndMaxNumber(
				fragmentName = "Collection Display",
				layoutColumns = "5 Columns",
				maxNumber = "5");
		}

		task ("On Preview Mode Assert the Number of Blogs in the List") {
			PageEditor.openPreviewMode();

			AssertElementPresent(
				key_colummnsNumber = "5",
				locator1 = "Masterclass#COLUMNS_NUMBER");
		}
	}

	@description = "This is a test for LPS-140611. Masterclass Apply Page in Desktop size"
	@ignore = "Test Stub"
	@priority = "3"
	test MasterclassApplyinDesktopSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-140611. Masterclass Apply Page in Mobile size"
	@ignore = "Test Stub"
	@priority = "3"
	test MasterclassApplyinMobileSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-140611. Masterclass Apply Page in Tablet size"
	@ignore = "Test Stub"
	@priority = "3"
	test MasterclassApplyinTabletSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-140611. Masterclass Blog Page in Desktop size"
	@ignore = "Test Stub"
	@priority = "4"
	test MasterclassBloginDesktopSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-140611. Masterclass Blog Page in Mobile size"
	@ignore = "Test Stub"
	@priority = "4"
	test MasterclassBloginMobileSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-140611. Masterclass Blog Page in Tablet size"
	@ignore = "Test Stub"
	@priority = "4"
	test MasterclassBloginTabletSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-140611. Masterclass Home Page in Desktop size"
	@ignore = "Test Stub"
	@priority = "4"
	test MasterclassHomeinDesktopSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-140611. Masterclass Home Page in Mobile size"
	@ignore = "Test Stub"
	@priority = "4"
	test MasterclassHomeinMobileSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-140611. Masterclass Home Page in Tablet size"
	@ignore = "Test Stub"
	@priority = "4"
	test MasterclassHomeinTabletSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-140611. Masterclass My Learning Page in Mobile size"
	@ignore = "Test Stub"
	@priority = "4"
	test MasterclassMyLearninginDesktopSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-140611. Masterclass My Learning Page in Mobile size"
	@ignore = "Test Stub"
	@priority = "4"
	test MasterclassMyLearninginMobileSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-140611. Masterclass My Learning Page in Tablet size"
	@ignore = "Test Stub"
	@priority = "4"
	test MasterclassMyLearninginTabletSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-140611. Masterclass Sign In Page in Desktop size"
	@ignore = "Test Stub"
	@priority = "4"
	test MasterclassSignIninDesktopSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-140611. Masterclass Sign In Page in Mobile size"
	@ignore = "Test Stub"
	@priority = "4"
	test MasterclassSignIninMobileSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-140611. Masterclass Sign In Page in Tablet size"
	@ignore = "Test Stub"
	@priority = "4"
	test MasterclassSignIninTabletSize {

		// TODO Create the automation about the LPS-140611.

	}

	@description = "This is a test for LPS-141768. View the READ MORE links of the three courses redirect to the course display page"
	@ignore = "Test Stub"
	@priority = "4"
	test ReadMoreLinksRedirectToCourseDisplayPage {

		// TODO Create the automation about the LPS-141768.

	}

	@description = "This is a test for LPS-140613. View if the Student can have permissions set"
	@ignore = "Test Stub"
	@priority = "4"
	test SetStudentPermission {

		// TODO Create the automation about the LPS-140613.

	}

	@description = "This is a test for LPS-140613. View if the Teacher can have permissions set"
	@ignore = "Test Stub"
	@priority = "4"
	test SetTeacherPermission {

		// TODO Create the automation about the LPS-140613.

	}

	@description = "This is a test for LPS-141768. View the three available courses in Home content page"
	@ignore = "Test Stub"
	@priority = "4"
	test ViewAvailableCoursesinHomeCP {

		// TODO Create the automation about the LPS-141768.

	}

	@description = "This is a test for LPS-141370. View a Blog Collection in Display Page Template of Blogs"
	@priority = "4"
	test ViewBlogCollectioninDPTofBlogs {
		task ("Go to Masterclass Site") {
			ApplicationsMenu.gotoSite(site = "Test Masterclass Name");
		}

		task ("Go to Display Page Templates") {
			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Page Templates");

			NavItem.gotoPageTemplates();

			Navigator.gotoNavTab(navTab = "Display Page Templates");
		}

		task ("Go to Blog Entry and Assert the List of Blogs Presence") {
			Click(
				key_assetType = "Blog Entry",
				locator1 = "Sharing#SHARED_CONTENT_ASSET_TYPE");

			PageEditor.openPreviewMode();

			AssertElementPresent(
				key_colummnsNumber = "3",
				locator1 = "Masterclass#COLUMNS_NUMBER");
		}
	}

	@description = "This is a test for LPS-141370. View a List of Blogs in the Blog Detail View"
	@priority = "4"
	test ViewBlogListinBlogDetailView {
		task ("Go to Masterclass Site") {
			ApplicationsMenu.gotoSite(site = "Test Masterclass Name");
		}

		task ("Go to Blog and Assert the List of Blogs Presence") {
			Navigator.gotoSitePage(
				pageName = "Blog",
				siteName = "Test Masterclass Name");

			Click(locator1 = "Experience#FRAGMENT_HEADING");

			AssertElementPresent(
				key_colummnsNumber = "3",
				locator1 = "Masterclass#COLUMNS_NUMBER");
		}
	}

	@description = "This is a test for LPS-141768. View list to the three available courses pages"
	@ignore = "Test Stub"
	@priority = "4"
	test ViewListofAvailableCoursesPage {

		// TODO Create the automation about the LPS-141768.

	}

	@description = "This is a test for LPS-137508. View the Masterclass Categories"
	@priority = "3"
	test ViewMasterclassCategories {
		task ("Go to Masterclass Categories") {
			Category.openCategoriesAdmin(siteURLKey = "test-masterclass-name");
		}

		task ("Assert the Categories are present") {
			for (var categoryName : list "Design,Management,Marketing") {
				Category.viewCP(
					categoryName = "${categoryName}",
					vocabularyName = "Masterclass");
			}
		}
	}

	@description = "This is a test for LPS-137508. View the Masterclass Stylebook Classic Theme"
	@ignore = "true"
	test ViewMasterclassClassicStylebook {
		task ("Go to Masterclass Stylebook") {
			StyleBooksAdmin.openStyleBooksAdmin(siteURLKey = "test-masterclass-name");
		}

		task ("Assert the Stylebook Classic Theme and Modern Theme are present") {
			for (var styleBookName : list "Masterclass Classic,Masterclass Modern") {
				StyleBooksAdmin.viewStyleBooksPresent(styleBookName = "${styleBookName}");
			}
		}
	}

	@description = "This is a test for LPS-137508. View the Masterclass Collections"
	@priority = "4"
	test ViewMasterclassCollections {
		task ("Go to Masterclass Collections") {
			ApplicationsMenu.gotoSite(site = "Test Masterclass Name");

			ProductMenu.gotoPortlet(
				category = "Site Builder",
				portlet = "Collections");
		}

		task ("Assert the Collections are present") {
			for (var key_title : list "Blog Entries,Featured Blog Entries,Courses,Teachers,Classrooms") {
				AssertElementPresent(
					key_title = "${key_title}",
					locator1 = "ItemSelector#LOCATION_INFO_LIST_GENERIC");
			}
		}
	}

	@description = "This is a test for LPS-137508. View the Masterclass Documents"
	@priority = "4"
	test ViewMasterclassDocuments {
		task ("Go to Masterclass Documents") {
			DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "test-masterclass-name");
		}

		task ("Assert the 29 Documents are present") {
			Pagination.changePagination(itemsPerPage = "40");

			for (var key_card : list "video_marketing.mp4,video_management.mp4,video_design.mp4,thumb_video_marketing.jpg,thumb_video_management.jpg,thumb_video_design.jpg,teacher_ralph_edwards.jpg,teacher_jerome_bell.jpg,teacher_jane_cooper.jpg,teacher_esther_howard.jpg,teacher_brooklyn_simmons.jpg,smile.svg,method_03.jpg,method_02.jpg,method_01.jpg,masterclass_logo.svg,logos.svg,form_3.jpg,dollar.svg,calendar.svg,blog_09.jpg,blog_08.jpg,blog_07.jpg,blog_06.jpg,blog_05.jpg,blog_04.jpg,blog_03.jpg,blog_02.jpg,blog_01.jpg") {
				AssertElementPresent(
					key_card = "${key_card}",
					locator1 = "Card#CARD_TITLE");
			}
		}
	}

	@description = "This is a test for LPS-137508. View the Masterclass Fragments Collections"
	@priority = "3"
	test ViewMasterclassFragmentsCollections {
		task ("Go to Masterclass Fragments Collections") {
			FragmentsAdminNavigator.openFragmentsAdmin(siteURLKey = "test-masterclass-name");
		}

		task ("Assert the Fragments Collections are present") {
			for (var key_card : list "Masterclass Heading,Masterclass Button,Masterclass Sign In,Masterclass Video Map,Masterclass Private Header,Masterclass Container,Masterclass Hero,Masterclass Link,Masterclass Tabs,Masterclass Text Block,Masterclass Image,Masterclass Navbar,Masterclass Border,Masterclass Subscribe Form,Masterclass Video Player,Masterclass Footer,Masterclass Cookie Banner,Masterclass Video,Masterclass Classroom Header") {
				AssertElementPresent(
					key_card = "${key_card}",
					locator1 = "Card#CARD_TITLE");
			}
		}
	}

	@description = "This is a test for LPS-141573. View the Masterclass Modern Style Book in content pages"
	@priority = "3"
	test ViewMasterclassModernStyleBookonPage {
		task ("Go to Masterclass Stylebook and set Masterclass Moderns as Default") {
			StyleBooksAdmin.openStyleBooksAdmin(siteURLKey = "test-masterclass-name");

			StyleBooksAdmin.markStyleBookAsDefault(
				confirmMessage = "Do you want to replace Masterclass Modern for Masterclass Classic as the default style book?",
				styleBookName = "Masterclass Modern");
		}

		task ("Add a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Masterclass Name",
				layoutName = "Test Page Name",
				type = "content");
		}

		task ("Assert the Masterclass Modern as an Inherited from Master") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Masterclass Name");

			PageEditor.gotoTab(tabName = "Page Design Options");

			Navigator.gotoNavTab(navTab = "Style Book");

			AssertElementPresent(
				key_card = "Inherited from Master",
				key_styleBookName = "Masterclass Modern",
				locator1 = "StyleBookEditor#STYLE_BOOK_CARD_SELECTED");
		}
	}

	@description = "This is a test for LPS-137508. View the Masterclass Pages"
	@priority = "4"
	test ViewMasterclassPages {
		task ("Go to Masterclass Pages") {
			SitePages.openPagesAdmin(siteURLKey = "test-masterclass-name");
		}

		task ("Assert the Masterclass Pages are present") {
			for (var pageName : list "Home,404,Account Settings,Apply,Blog,Courses,My Learning,Notifications,Sign In") {
				AssertVisible(
					key_itemName = "${pageName}",
					locator1 = "SitePages#LIST_GROUP_ITEM");
			}
		}
	}

	@description = "This is a test for LPS-137508. View the Masterclass Page Templates"
	@priority = "4"
	test ViewMasterclassPageTemplates {
		task ("Go to Master Page Templates in Masterclass Site") {
			MastersPageTemplatesAdmin.openMastersAdmin(siteURLKey = "test-masterclass-name");
		}

		task ("Assert Master Page Templates are present") {
			for (var masterLayoutName : list "Blank,Main-1,Main-2,Private Area") {
				MastersPageTemplatesAdmin.viewMastersPresent(masterLayoutName = "${masterLayoutName}");
			}
		}

		task ("Go to Display Page Templates in Masterclass Site") {
			DisplayPageTemplatesAdmin.openDisplayPagesAdmin(siteURLKey = "test-masterclass-name");
		}

		task ("Assert Display Page Templates are present") {
			for (var displayPageName : list "Blog Entry,Classroom,Course") {
				DisplayPageTemplatesAdmin.viewDisplayPagePresent(displayPageName = "${displayPageName}");
			}
		}
	}

	@description = "This is a test for LPS-137508. View the Masterclass Web Content"
	@priority = "4"
	test ViewMasterclassWebContent {
		task ("Go to Masterclass Web Content") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-masterclass-name");
		}

		task ("Assert the 5 Teachers in Web Content are present") {
			WebContentFolder.gotoCP(
				folderName = "Teachers",
				webContentTitle = "Teachers");

			for (var webContentTitle : list "Ralph Edwards,Jerome Bell,Jane Cooper,Esther Howard,Brooklyn Simmons") {
				WebContent.viewTitle(webContentTitle = "${webContentTitle}");
			}
		}

		task ("Assert the 3 Courses in Web Content are present") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-masterclass-name");

			WebContentFolder.gotoCP(
				folderName = "Courses",
				webContentTitle = "Courses");

			for (var webContentTitle : list "Digital Marketing Bootcamp,Project Manager Certification,Product Design Bootcamp") {
				WebContent.viewTitle(webContentTitle = "${webContentTitle}");
			}
		}

		task ("Assert the 3 Classrooms in Web Content are present") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-masterclass-name");

			WebContentFolder.gotoCP(
				folderName = "Classrooms",
				webContentTitle = "Classrooms");

			for (var webContentTitle : list "Marketing Masterclass Classroom,Project Manager Certificate Classroom,Product Design Bootcamp Classroom") {
				WebContent.viewTitle(webContentTitle = "${webContentTitle}");
			}
		}

		task ("Assert the 9 Blog Entries in Web Content are present") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-masterclass-name");

			WebContentFolder.gotoCP(
				folderName = "Blog Entries",
				webContentTitle = "Blog Entries");

			for (var webContentTitle : list "25 management tips from top industry experts,20 gifts you can give to your marketing boss,What the best Management pros do (and you should too),Great people doing a great job in the design industry,When professionals run into problems with design,5 tools everyone in the design industry should be using,Meet the Steve Jobs of the marketing industry") {
				WebContent.viewTitle(webContentTitle = "${webContentTitle}");
			}

			WebContent.viewTitle(
				webContentTitle = '''The worst advice we've ever heard about marketing''',
				webContentTitleEscapeCharacter = '''The worst advice we&#39;ve ever heard about marketing''');

			WebContent.viewTitle(
				webContentTitle = '''Think you're cut out for doing management?''',
				webContentTitleEscapeCharacter = '''Think you&#39;re cut out for doing management?''');
		}

		task ("Go to Structures tab and assert the 4 Structures Names are present") {
			NavItem.gotoStructures();

			for (var webContentTitle : list "Teacher,Course,Classroom,Blog") {
				WebContentStructures.viewCP(structureName = "${structureName}");
			}
		}

		task ("Go to Templates tab and assert the 4 Templates Cards are present") {
			Navigator.gotoNavItem(navItem = "Templates");

			for (var templateName : list "Teacher,Course,Classroom,Blog") {
				WebContentTemplates.viewCardsEntryCP(templateName = "${templateName}");
			}
		}
	}

	@description = "This is a test for LPS-141768. View the names of the three courses redirect to the course display page"
	@ignore = "Test Stub"
	@priority = "4"
	test ViewNameofCoursesRedirectToCourseDisplayPage {

		// TODO Create the automation about the LPS-141768.

	}

	@description = "This is a test for LPS-140613. View the Student and Teacher are present in Site Roles"
	@ignore = "Test Stub"
	@priority = "4"
	test ViewStudentandTeacheronSiteRoles {

		// TODO Create the automation about the LPS-140613.

	}

	@description = "This is a test for LPS-140613. View permissions for Student and Teacher"
	@ignore = "Test Stub"
	@priority = "4"
	test ViewStudentandTeacherPermissions {

		// TODO Create the automation about the LPS-140613.

	}

}